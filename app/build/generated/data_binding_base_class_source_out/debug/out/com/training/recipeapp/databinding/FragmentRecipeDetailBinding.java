// Generated by view binder compiler. Do not edit!
package com.training.recipeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.training.recipeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRecipeDetailBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView recipeImageView;

  @NonNull
  public final TextView recipeInstructionsTextView;

  @NonNull
  public final TextView recipeNameTextView;

  @NonNull
  public final WebView recipeVideoWebView;

  @NonNull
  public final ImageView shareIcon;

  private FragmentRecipeDetailBinding(@NonNull ScrollView rootView,
      @NonNull ImageView recipeImageView, @NonNull TextView recipeInstructionsTextView,
      @NonNull TextView recipeNameTextView, @NonNull WebView recipeVideoWebView,
      @NonNull ImageView shareIcon) {
    this.rootView = rootView;
    this.recipeImageView = recipeImageView;
    this.recipeInstructionsTextView = recipeInstructionsTextView;
    this.recipeNameTextView = recipeNameTextView;
    this.recipeVideoWebView = recipeVideoWebView;
    this.shareIcon = shareIcon;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRecipeDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRecipeDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_recipe_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRecipeDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recipeImageView;
      ImageView recipeImageView = ViewBindings.findChildViewById(rootView, id);
      if (recipeImageView == null) {
        break missingId;
      }

      id = R.id.recipeInstructionsTextView;
      TextView recipeInstructionsTextView = ViewBindings.findChildViewById(rootView, id);
      if (recipeInstructionsTextView == null) {
        break missingId;
      }

      id = R.id.recipeNameTextView;
      TextView recipeNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (recipeNameTextView == null) {
        break missingId;
      }

      id = R.id.recipeVideoWebView;
      WebView recipeVideoWebView = ViewBindings.findChildViewById(rootView, id);
      if (recipeVideoWebView == null) {
        break missingId;
      }

      id = R.id.shareIcon;
      ImageView shareIcon = ViewBindings.findChildViewById(rootView, id);
      if (shareIcon == null) {
        break missingId;
      }

      return new FragmentRecipeDetailBinding((ScrollView) rootView, recipeImageView,
          recipeInstructionsTextView, recipeNameTextView, recipeVideoWebView, shareIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
