// Generated by view binder compiler. Do not edit!
package com.training.recipeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.training.recipeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView recyclerViewCategory;

  @NonNull
  public final RecyclerView recyclerViewRecipe;

  @NonNull
  public final TextView textViewCategory;

  @NonNull
  public final TextView textViewTitle;

  private FragmentHomeBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView recyclerViewCategory, @NonNull RecyclerView recyclerViewRecipe,
      @NonNull TextView textViewCategory, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.recyclerViewCategory = recyclerViewCategory;
    this.recyclerViewRecipe = recyclerViewRecipe;
    this.textViewCategory = textViewCategory;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerViewCategory;
      RecyclerView recyclerViewCategory = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewCategory == null) {
        break missingId;
      }

      id = R.id.recyclerViewRecipe;
      RecyclerView recyclerViewRecipe = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewRecipe == null) {
        break missingId;
      }

      id = R.id.textViewCategory;
      TextView textViewCategory = ViewBindings.findChildViewById(rootView, id);
      if (textViewCategory == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, recyclerViewCategory,
          recyclerViewRecipe, textViewCategory, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
