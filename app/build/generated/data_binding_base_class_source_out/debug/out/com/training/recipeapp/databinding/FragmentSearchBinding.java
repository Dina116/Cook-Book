// Generated by view binder compiler. Do not edit!
package com.training.recipeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.training.recipeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout fragmentContainer;

  @NonNull
  public final ImageView imgSearch;

  @NonNull
  public final LinearLayout linearSearch;

  @NonNull
  public final RecyclerView rvSearchMeals;

  @NonNull
  public final EditText searchBox;

  private FragmentSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout fragmentContainer, @NonNull ImageView imgSearch,
      @NonNull LinearLayout linearSearch, @NonNull RecyclerView rvSearchMeals,
      @NonNull EditText searchBox) {
    this.rootView = rootView;
    this.fragmentContainer = fragmentContainer;
    this.imgSearch = imgSearch;
    this.linearSearch = linearSearch;
    this.rvSearchMeals = rvSearchMeals;
    this.searchBox = searchBox;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout fragmentContainer = (ConstraintLayout) rootView;

      id = R.id.imgSearch;
      ImageView imgSearch = ViewBindings.findChildViewById(rootView, id);
      if (imgSearch == null) {
        break missingId;
      }

      id = R.id.linear_search;
      LinearLayout linearSearch = ViewBindings.findChildViewById(rootView, id);
      if (linearSearch == null) {
        break missingId;
      }

      id = R.id.rv_search_meals;
      RecyclerView rvSearchMeals = ViewBindings.findChildViewById(rootView, id);
      if (rvSearchMeals == null) {
        break missingId;
      }

      id = R.id.search_box;
      EditText searchBox = ViewBindings.findChildViewById(rootView, id);
      if (searchBox == null) {
        break missingId;
      }

      return new FragmentSearchBinding((ConstraintLayout) rootView, fragmentContainer, imgSearch,
          linearSearch, rvSearchMeals, searchBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
